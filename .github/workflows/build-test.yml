################################################################################################################################################################

# @project        Open Space Toolkit
# @file           .github/workflows/build-test.yml
# @author         Lucas Br√©mond <lucas@loftorbital.com>
# @license        Apache License 2.0

################################################################################################################################################################

name: Build and Test

on:
  workflow_call:
    inputs:
      project_name:
        description: The name of the project.
        required: true
        type: string
      project_version:
        description: The version of the project.
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

env:
  DOCKER_REGISTRY_PATH: openspacecollective
  LANG: en_US.UTF-8

jobs:
  build-image-development:
    name: Build Development Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Development Image
        uses: docker/build-push-action@v3
        with:
          tags: ${{ env.DOCKER_REGISTRY_PATH }}/${{ inputs.project_name }}-development:${{ inputs.project_version }}
          context: ./docker/development
          build-args: |
            BASE_IMAGE_SYSTEM=debian
            VERSION=${{ inputs.project_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true

  test-unit-cpp:
    name: Run C++ Unit Tests
    runs-on: ubuntu-latest
    needs:
      - build-image-development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull Development Image
        run: docker pull ${{ env.DOCKER_REGISTRY_PATH }}/${{ inputs.project_name }}-development:${{ inputs.project_version }}
      - name: Run Unit Tests C++
        run: make test-coverage-cpp-standalone
      - name: Upload Coverage Results
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          fail_ci_if_error: true

  test-unit-python:
    name: Run Python Unit Tests
    runs-on: ubuntu-latest
    needs:
      - build-image-development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull Development Image
        run: docker pull ${{ env.DOCKER_REGISTRY_PATH }}/${{ inputs.project_name }}-development:${{ inputs.project_version }}
      - name: Run Unit Tests Python
        run: make test-unit-python-standalone

  build-package-cpp:
    name: Build C++ Package
    runs-on: ubuntu-latest
    needs:
      - test-unit-cpp
      - test-unit-python
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull Development Image
        run: docker pull ${{ env.DOCKER_REGISTRY_PATH }}/${{ inputs.project_name }}-development:${{ inputs.project_version }}
      - name: Build C++ Package
        run: make build-packages-cpp-standalone
      - name: Upload C++ Package
        uses: actions/upload-artifact@v3
        with:
          name: cpp-package
          path: packages/cpp/

  build-package-python:
    name: Build Python Package
    runs-on: ubuntu-latest
    needs:
      - test-unit-cpp
      - test-unit-python
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull Development Image
        run: docker pull ${{ env.DOCKER_REGISTRY_PATH }}/${{ inputs.project_name }}-development:${{ inputs.project_version }}
      - name: Build Python Package
        run: make build-packages-python-standalone
      - name: Upload Python Package
        uses: actions/upload-artifact@v3
        with:
          name: python-package
          path: packages/python/

  build-documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs:
      - test-unit-cpp
      - test-unit-python
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Documentation
        run: make build-documentation-standalone
      - name: Upload Documentation
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/

################################################################################################################################################################
